@model app_ointment_backend.Models.Appointment

@{
    ViewData["Title"] = "Appointment Details";
}

<h1><i class="bi bi-eye"></i> Appointment Details</h1>

<div class="row">
    <div class="col-md-8">
        <div class="card mb-3">
            <div class="card-header bg-primary text-white">
                <h4>Appointment Information</h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Date</dt>
                    <dd class="col-sm-8">@Model.AppointmentDate.ToString("dddd, dd MMMM yyyy")</dd>
                    
                    <dt class="col-sm-4">Time</dt>
                    <dd class="col-sm-8">@Model.StartTime.ToString(@"hh\:mm") - @Model.EndTime.ToString(@"hh\:mm")</dd>
                    
                    <dt class="col-sm-4">Elderly User</dt>
                    <dd class="col-sm-8">
                        <i class="bi bi-person-circle"></i> @Model.ElderlyUser.Name<br />
                        <small class="text-muted">
                            <i class="bi bi-envelope"></i> @Model.ElderlyUser.Email<br />
                            <i class="bi bi-telephone"></i> @Model.ElderlyUser.Phone
                        </small>
                    </dd>
                    
                    <dt class="col-sm-4">Healthcare Personnel</dt>
                    <dd class="col-sm-8">
                        <i class="bi bi-person-badge"></i> @Model.HealthcarePersonnel.Name<br />
                        <small class="text-muted">
                            <i class="bi bi-envelope"></i> @Model.HealthcarePersonnel.Email<br />
                            <i class="bi bi-telephone"></i> @Model.HealthcarePersonnel.Phone
                        </small>
                    </dd>
                    
                    <dt class="col-sm-4">Status</dt>
                    <dd class="col-sm-8">
                        @switch (Model.Status)
                        {
                            case app_ointment_backend.Models.AppointmentStatus.Scheduled:
                                <span class="badge bg-primary">Scheduled</span>
                                break;
                            case app_ointment_backend.Models.AppointmentStatus.InProgress:
                                <span class="badge bg-warning">In Progress</span>
                                break;
                            case app_ointment_backend.Models.AppointmentStatus.Completed:
                                <span class="badge bg-success">Completed</span>
                                break;
                            case app_ointment_backend.Models.AppointmentStatus.Cancelled:
                                <span class="badge bg-danger">Cancelled</span>
                                break;
                        }
                    </dd>
                    
                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <dt class="col-sm-4">Notes</dt>
                        <dd class="col-sm-8">@Model.Notes</dd>
                    }
                    
                    <dt class="col-sm-4">Created</dt>
                    <dd class="col-sm-8">@Model.CreatedAt.ToString("dd MMM yyyy HH:mm")</dd>
                </dl>
            </div>
        </div>

        <div class="card">
            <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                <h4 class="mb-0">Tasks (@Model.Tasks.Count)</h4>
                <a asp-controller="AppointmentTasks" asp-action="Create" asp-route-appointmentId="@Model.Id" 
                   class="btn btn-sm btn-light">
                    <i class="bi bi-plus-circle"></i> Add Task
                </a>
            </div>
            <div class="card-body">
                @if (Model.Tasks.Any())
                {
                    <div class="list-group">
                        @foreach (var task in Model.Tasks)
                        {
                            <div class="list-group-item @(task.IsCompleted ? "list-group-item-success" : "")">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="flex-grow-1">
                                        <h5 class="mb-1">
                                            @if (task.IsCompleted)
                                            {
                                                <i class="bi bi-check-circle-fill text-success"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-circle"></i>
                                            }
                                            @task.TaskName
                                        </h5>
                                        <p class="mb-1">
                                            <span class="badge bg-secondary">@task.TaskType</span>
                                        </p>
                                        @if (!string.IsNullOrEmpty(task.Description))
                                        {
                                            <p class="mb-0 text-muted">@task.Description</p>
                                        }
                                    </div>
                                    <div>
                                        <form asp-controller="AppointmentTasks" asp-action="ToggleComplete" 
                                              asp-route-id="@task.Id" method="post" class="d-inline">
                                            <button type="submit" class="btn btn-sm btn-outline-success" title="Toggle Complete">
                                                <i class="bi bi-check2"></i>
                                            </button>
                                        </form>
                                        <a asp-controller="AppointmentTasks" asp-action="Delete" asp-route-id="@task.Id" 
                                           class="btn btn-sm btn-outline-danger" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">No tasks added yet.</p>
                }
            </div>
        </div>

        <div class="mt-3">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                <i class="bi bi-pencil"></i> Edit
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                <i class="bi bi-trash"></i> Delete
            </a>
        </div>
    </div>
</div>

