@model IEnumerable<Appointment>
@using Microsoft.AspNetCore.Http

@{
    var roleInt = Context.Session.GetInt32("CurrentUserRole");
    var currentUserId = Context.Session.GetInt32("CurrentUserId");
    var isAdmin = roleInt.HasValue && (UserRole)roleInt.Value == UserRole.Admin;
    var isClient = roleInt.HasValue && (UserRole)roleInt.Value == UserRole.Client;
    var isCaregiver = roleInt.HasValue && (UserRole)roleInt.Value == UserRole.Caregiver;
}

<div class="container">
    <table class='table table-striped'>
        <tr>
            <th>Id</th>
            <th>Client Name</th>
            <th>Caregiver Name</th>
            <th>Date & Time</th>
            <th>Location</th>
            <th></th>
        </tr>
        @foreach (var appointment in Model)
        {
            var canEdit = isAdmin 
                || (isClient && currentUserId.HasValue && appointment.ClientId == currentUserId.Value)
                || (isCaregiver && currentUserId.HasValue && appointment.CaregiverId == currentUserId.Value);
            <tr>
                <td>@appointment.AppointmentId</td>
                <td>@(appointment.Client?.Name ?? "-")</td>
                <td>@(appointment.Caregiver?.Name ?? "-")</td>
                <td>@appointment.Date</td>
                <td>@appointment.Location</td>
                <td>
                    @if (canEdit)
                    {
                        <a asp-action="Update" asp-route-id="@appointment.AppointmentId">Update</a>
                        <a asp-action="Delete" asp-route-id="@appointment.AppointmentId" class="ms-2">Delete</a>
                    }
                </td>
            </tr>
        }
    
    </table>
</div>
